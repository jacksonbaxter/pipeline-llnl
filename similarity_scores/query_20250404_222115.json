{
  "query": "What is the encoder layer in the attention block",
  "timestamp": "20250404_222115",
  "results": [
    {
      "text": "Table 1: Maximum path lengths, per-layer complexity and minimum number of sequential operations for different layer types. n is the sequence length, d is the representation dimension, k is the kernel size of convolutions and r the size of the neighborhood in restricted self-attention.",
      "similarity_score": 0.793247447470266,
      "metadata": {
        "context": "This chunk presents Table 1, which summarizes key metrics such as maximum path lengths, per-layer complexity, and the minimum number of sequential operations associated with different layer types in neural network architectures, specifically in the context of comparing self-attention layers to recurrent and convolutional layers within the Transformer model discussed in the document.",
        "filename": "1706.03762v7.pdf",
        "page_numbers": [
          6
        ],
        "title": "3.4 Embeddings and Softmax"
      }
    },
    {
      "text": "In addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully connected feed-forward network, which is applied to each position separately and identically. This consists of two linear transformations with a ReLU activation in between.\n\nWhile the linear transformations are the same across different positions, they use different parameters from layer to layer. Another way of describing this is as two convolutions with kernel size 1. The dimensionality of input and output is d model = 512 , and the inner-layer has dimensionality d ff = 2048 .",
      "similarity_score": 0.7897351188265952,
      "metadata": {
        "context": "This chunk describes the structure of the feed-forward networks integrated within the encoder and decoder layers of the Transformer model, highlighting the use of linear transformations and ReLU activations, along with the dimensionality of input and inner layers. This information is part of the overall explanation of the Transformer's architecture, which relies solely on attention mechanisms instead of recurrence or convolutions.",
        "filename": "1706.03762v7.pdf",
        "page_numbers": [
          5
        ],
        "title": "3.3 Position-wise Feed-Forward Networks"
      }
    },
    {
      "text": "Encoder: The encoder is composed of a stack of N = 6 identical layers. Each layer has two sub-layers. The first is a multi-head self-attention mechanism, and the second is a simple, positionwise fully connected feed-forward network. We employ a residual connection [11] around each of the two sub-layers, followed by layer normalization [1]. That is, the output of each sub-layer is LayerNorm( x +Sublayer( x )) , where Sublayer( x ) is the function implemented by the sub-layer itself. To facilitate these residual connections, all sub-layers in the model, as well as the embedding layers, produce outputs of dimension d model = 512 .\nDecoder: The decoder is also composed of a stack of N = 6 identical layers. In addition to the two sub-layers in each encoder layer, the decoder inserts a third sub-layer, which performs multi-head attention over the output of the encoder stack. Similar to the encoder, we employ residual connections around each of the sub-layers, followed by layer normalization. We also modify the self-attention sub-layer in the decoder stack to prevent positions from attending to subsequent positions. This masking, combined with fact that the output embeddings are offset by one position, ensures that the predictions for position i can depend only on the known outputs at positions less than i .",
      "similarity_score": 0.7867601653038855,
      "metadata": {
        "context": "This chunk describes the architecture of the Transformer model, specifically detailing the structure and functionality of the encoder and decoder components, including the use of multi-head self-attention mechanisms, residual connections, and layer normalization, which are key features of the model's design.",
        "filename": "1706.03762v7.pdf",
        "page_numbers": [
          3
        ],
        "title": "3.1 Encoder and Decoder Stacks"
      }
    }
  ]
}