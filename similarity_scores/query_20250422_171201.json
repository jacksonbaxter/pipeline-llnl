{
  "query": "Decoder",
  "timestamp": "20250422_171201",
  "results": [
    {
      "text": "Encoder: The encoder is composed of a stack of N = 6 identical layers. Each layer has two sub-layers. The first is a multi-head self-attention mechanism, and the second is a simple, positionwise fully connected feed-forward network. We employ a residual connection [11] around each of the two sub-layers, followed by layer normalization [1]. That is, the output of each sub-layer is LayerNorm( x +Sublayer( x )) , where Sublayer( x ) is the function implemented by the sub-layer itself. To facilitate these residual connections, all sub-layers in the model, as well as the embedding layers, produce outputs of dimension d model = 512 .\nDecoder: The decoder is also composed of a stack of N = 6 identical layers. In addition to the two sub-layers in each encoder layer, the decoder inserts a third sub-layer, which performs multi-head attention over the output of the encoder stack. Similar to the encoder, we employ residual connections around each of the sub-layers, followed by layer normalization. We also modify the self-attention sub-layer in the decoder stack to prevent positions from attending to subsequent positions. This masking, combined with fact that the output embeddings are offset by one position, ensures that the predictions for position i can depend only on the known outputs at positions less than i .",
      "similarity_score": 0.3559386858982385,
      "metadata": {
        "context": "",
        "filename": "AttentionIsAllYouNeed.pdf",
        "page_numbers": [
          3,
          3
        ],
        "title": "3.1 Encoder and Decoder Stacks"
      }
    },
    {
      "text": "Most competitive neural sequence transduction models have an encoder-decoder structure [5, 2, 35]. Here, the encoder maps an input sequence of symbol representations ( x , ..., x 1 n ) to a sequence of continuous representations z = ( z , ..., z 1 n ) . Given z , the decoder then generates an output sequence ( y , ..., y 1 m ) of symbols one element at a time. At each step the model is auto-regressive [10], consuming the previously generated symbols as additional input when generating the next.\nThe Transformer follows this overall architecture using stacked self-attention and point-wise, fully connected layers for both the encoder and decoder, shown in the left and right halves of Figure 1, respectively.",
      "similarity_score": 0.33187192261286014,
      "metadata": {
        "context": "",
        "filename": "AttentionIsAllYouNeed.pdf",
        "page_numbers": [
          2,
          3
        ],
        "title": "3 Model Architecture"
      }
    },
    {
      "text": "In addition to attention sub-layers, each of the layers in our encoder and decoder contains a fully connected feed-forward network, which is applied to each position separately and identically. This consists of two linear transformations with a ReLU activation in between.\n\nWhile the linear transformations are the same across different positions, they use different parameters from layer to layer. Another way of describing this is as two convolutions with kernel size 1. The dimensionality of input and output is d model = 512 , and the inner-layer has dimensionality d ff = 2048 .",
      "similarity_score": 0.3039250789261738,
      "metadata": {
        "context": "",
        "filename": "AttentionIsAllYouNeed.pdf",
        "page_numbers": [
          5,
          5,
          5
        ],
        "title": "3.3 Position-wise Feed-Forward Networks"
      }
    }
  ]
}